# Local .terraform directories
**/.terraform/*
.terraform*
# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*


*un~
# Binaries
bin
# Micromamba
.micromamba

# Secrets
.secrets

# Certbot
.certbot

# ENV
.env

# SSH
id_rsa
id_rsa.pub

# Python
***.pyc
__pycache__
.idea
.DS_Store
testscript.py

# GCP credentials
credentials.json
keys/gcp_tf
keys/gcp_tf.pub

.bin*

# data
Setup
terraform/resources/python-producer/data
data.zip
.vscode
env-neo4j-py
neo4setup
resources/python-producer/data.zip
# data.zip
resources/workload-generator/my-data

resources/docker-compose.yaml
contrib.sink.neo4j-current.json
provider.tf
*credentials*
create-instance.tf
